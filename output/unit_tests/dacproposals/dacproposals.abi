{
    "____comment": "This file was generated with eosio-abigen. DO NOT EDIT Wed Mar 27 22:46:20 2019",
    "version": "eosio::abi/1.1",
    "structs": [
        {
            "name": "arbapprove",
            "base": "",
            "fields": [
                {
                    "name": "arbitrator",
                    "type": "name"
                },
                {
                    "name": "proposal_id",
                    "type": "uint64"
                }
            ]
        },
        {
            "name": "cancel",
            "base": "",
            "fields": [
                {
                    "name": "proposal_id",
                    "type": "uint64"
                }
            ]
        },
        {
            "name": "claim",
            "base": "",
            "fields": [
                {
                    "name": "proposal_id",
                    "type": "uint64"
                }
            ]
        },
        {
            "name": "comment",
            "base": "",
            "fields": [
                {
                    "name": "commenter",
                    "type": "name"
                },
                {
                    "name": "proposal_id",
                    "type": "uint64"
                },
                {
                    "name": "comment",
                    "type": "string"
                },
                {
                    "name": "comment_category",
                    "type": "string"
                }
            ]
        },
        {
            "name": "completework",
            "base": "",
            "fields": [
                {
                    "name": "proposal_id",
                    "type": "uint64"
                }
            ]
        },
        {
            "name": "configtype",
            "base": "",
            "fields": [
                {
                    "name": "service_account",
                    "type": "name"
                },
                {
                    "name": "authority_account",
                    "type": "name"
                },
                {
                    "name": "member_terms_account",
                    "type": "name"
                },
                {
                    "name": "treasury_account",
                    "type": "name"
                },
                {
                    "name": "proposal_threshold",
                    "type": "uint16"
                },
                {
                    "name": "proposal_approval_threshold_percent",
                    "type": "uint16"
                },
                {
                    "name": "claim_threshold",
                    "type": "uint16"
                },
                {
                    "name": "claim_approval_threshold_percent",
                    "type": "uint16"
                },
                {
                    "name": "escrow_expiry",
                    "type": "uint32"
                }
            ]
        },
        {
            "name": "contr_state",
            "base": "",
            "fields": [
                {
                    "name": "last_proposal_id",
                    "type": "uint32"
                }
            ]
        },
        {
            "name": "createprop",
            "base": "",
            "fields": [
                {
                    "name": "proposer",
                    "type": "name"
                },
                {
                    "name": "title",
                    "type": "string"
                },
                {
                    "name": "summary",
                    "type": "string"
                },
                {
                    "name": "arbitrator",
                    "type": "name"
                },
                {
                    "name": "pay_amount",
                    "type": "extended_asset"
                },
                {
                    "name": "content_hash",
                    "type": "string"
                }
            ]
        },
        {
            "name": "migrate",
            "base": "",
            "fields": []
        },
        {
            "name": "proposal",
            "base": "",
            "fields": [
                {
                    "name": "key",
                    "type": "uint64"
                },
                {
                    "name": "proposer",
                    "type": "name"
                },
                {
                    "name": "arbitrator",
                    "type": "name"
                },
                {
                    "name": "content_hash",
                    "type": "string"
                },
                {
                    "name": "pay_amount",
                    "type": "extended_asset"
                },
                {
                    "name": "state",
                    "type": "uint8"
                }
            ]
        },
        {
            "name": "proposalvote",
            "base": "",
            "fields": [
                {
                    "name": "vote_id",
                    "type": "uint64"
                },
                {
                    "name": "proposal_id",
                    "type": "uint64"
                },
                {
                    "name": "voter",
                    "type": "name"
                },
                {
                    "name": "vote",
                    "type": "uint8"
                },
                {
                    "name": "comment_hash",
                    "type": "string"
                }
            ]
        },
        {
            "name": "startwork",
            "base": "",
            "fields": [
                {
                    "name": "proposal_id",
                    "type": "uint64"
                }
            ]
        },
        {
            "name": "updateconfig",
            "base": "",
            "fields": [
                {
                    "name": "new_config",
                    "type": "configtype"
                }
            ]
        },
        {
            "name": "voteprop",
            "base": "",
            "fields": [
                {
                    "name": "custodian",
                    "type": "name"
                },
                {
                    "name": "proposal_id",
                    "type": "uint64"
                },
                {
                    "name": "vote",
                    "type": "uint8"
                }
            ]
        }
    ],
    "types": [],
    "actions": [
        {
            "name": "arbapprove",
            "type": "arbapprove",
            "ricardian_contract": "## ACTION: arbapprove\n**PARAMETERS:**\n* __arbitrator__ is an eosio account name of the nominated arbitrator for the proposal.\n* __proposal_id__ is an integer id for an existing proposal for the custodian to vote on.\n\n**INTENT:** \nThe intent of arbapprove is to cleanup a proposal after the arbitrator has directly approved the escrow in the escrow contract. This cannot perform the approval on the escrow contract without weakening the security integrity of the escrow contract model, since this would require this contract to have the permission for approving an escrow transfer from both the sender and arbitrator's perspective. Since only the escrow contract was intended to be secured from modification then this would be a potential attack vector to the escrow contract."
        },
        {
            "name": "cancel",
            "type": "cancel",
            "ricardian_contract": "## ACTION: cancel\n  **PARAMETERS:**\n  * __proposal_id__ is an integer id for an existing proposal for the proposer to cancel.\n\n  **INTENT:**\n  The intent of cancel is to cancel a proposal."
        },
        {
            "name": "claim",
            "type": "claim",
            "ricardian_contract": "## ACTION: claim\n **PARAMETERS:**\n * __proposal_id__ is an integer id for an existing proposal for the proposer to claim.\n\n **INTENT:**\n The intent of claim is to indicate the proposer has completed the required work for a worker proposal and would like to claim the escrowed funds as payment."
        },
        {
            "name": "comment",
            "type": "comment",
            "ricardian_contract": "## ACTION: comment\n  **PARAMETERS:*\n  * __commenter__ The commenter eos account name \n  * __proposal_id__ is an integer id for an existing proposal for the proposer to comment on.\n  * __comment__ The string representing the comment for the proposal\n  * __comment_category__ The string for comment category to help categorise comments.\n\n  **INTENT:**\n  The intent of comment is to capture and authorise comments related to a proposal."
        },
        {
            "name": "completework",
            "type": "completework",
            "ricardian_contract": "## ACTION: completework\n**PARAMETERS:**\n* __proposal_id__ is an integer id for an existing proposal created by this proposer.\n\n**INTENT:**\nThe intent of completework is to indicate that proposer to gas completed the work on an existing proposal and intends to claim. The proposal is then put in the pending_claim state and will await the custodians approval."
        },
        {
            "name": "createprop",
            "type": "createprop",
            "ricardian_contract": "## ACTION: createprop\n**PARAMETERS:**\n* __proposer__ is an eosio account name.\n* __title__ is a string that provides a title for the proposal.\n* __summary__ is a string that provides a summary for the proposal.\n* __arbitrator__ is an eosio account name for a nominated arbitrator on the proposal.\n* __pay_amount__ is an eosio asset amount representing the requested pay amount for the worker proposal.\n* __content_hash__ is a string that provides a hash of the details of the proposal.\n\n**INTENT** The intent of createprop is to enter a new worker proposal.\n#### Warning: This action will store the content on the chain in the history logs and the data cannot be deleted later so therefore should only store a unidentifiable hash of content rather than human readable content."
        },
        {
            "name": "migrate",
            "type": "migrate",
            "ricardian_contract": ""
        },
        {
            "name": "startwork",
            "type": "startwork",
            "ricardian_contract": "## ACTION: startwork\n**PARAMETERS:**\n* __proposal_id__ is an integer id for an existing proposal created by this proposer.\n\n**INTENT:** \nThe intent of startwork is to indicate the intention for the proposer to start work on an existing proposal."
        },
        {
            "name": "updateconfig",
            "type": "updateconfig",
            "ricardian_contract": "## ACTION: updateconfig\n**PARAMETERS:**\n* __new_config__ is a config_type object to update the settings for the contract.\n\n**INTENT:** The intent of updateconfig is to update the contract settings within the contract.\nThe fields in the config object the their default values are:\n* name service_account - The service account to manage the escrow funds for worker proposals.\n* uint16_t proposal_threshold = 7 - The number of required votes to make a decision on approving a worker proposal submission.\n* uint16_t proposal_approval_threshold_percent = 50 - The percent threshold required to approve a proposal submission.\n* uint16_t claim_threshold = 5 - The number of required votes to make a decision on approving a claim for a worker proposal.\n* uint16_t claim_approval_threshold_percent = 50 - The percent threshold required to approve for a proposal claim.\n\n**TERM:** This action lasts for the duration of the time taken to process the transaction."
        },
        {
            "name": "voteprop",
            "type": "voteprop",
            "ricardian_contract": "## ACTION: voteprop\n**PARAMETERS:**\n* __custodian__ is an eosio account name.\n* __proposal_id__ is an integer id for an existing proposal for the custodian to vote on.\n* __vote__ is an integer repesenting a vote type on the proposal.\n\n**INTENT:** \nThe intent of voteprop is to record a vote on an existing proposal."
        }
    ],
    "tables": [
        {
            "name": "configtype",
            "type": "configtype",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "proposals",
            "type": "proposal",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "propvotes",
            "type": "proposalvote",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        },
        {
            "name": "state",
            "type": "contr_state",
            "index_type": "i64",
            "key_names": [],
            "key_types": []
        }
    ],
    "ricardian_clauses": [
        {
            "id": "ENTIRE AGREEMENT",
            "body": "This contract contains the entire agreement of the parties, for all described actions, and there are no other promises or conditions in any other agreement whether oral or written concerning the subject matter of this Contract. This contract supersedes any prior written or oral agreements between the parties."
        },
        {
            "id": "BINDING CONSTITUTION",
            "body": "All the the action descibed in this contract are subject to the EOSDAC consitution as held at http://eosdac.io. This includes, but is not limited to membership terms and conditions, dispute resolution and severability."
        }
    ],
    "variants": [],
    "abi_extensions": []
}